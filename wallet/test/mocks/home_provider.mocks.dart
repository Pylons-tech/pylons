// Mocks generated by Mockito 5.3.2 from annotations
// in pylons_wallet/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i12;

import 'package:dartz/dartz.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pylons_wallet/model/balance.dart' as _i6;
import 'package:pylons_wallet/model/notification_message.dart' as _i4;
import 'package:pylons_wallet/model/transaction.dart' as _i8;
import 'package:pylons_wallet/pages/home/home_provider.dart' as _i5;
import 'package:pylons_wallet/pages/home/wallet_screen/model/currency.dart'
    as _i7;
import 'package:pylons_wallet/services/repository/repository.dart' as _i2;
import 'package:pylons_wallet/utils/failure/failure.dart' as _i11;
import 'package:transaction_signing_gateway/transaction_signing_gateway.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0 extends _i1.SmartFake implements _i2.Repository {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccountPublicInfo_1 extends _i1.SmartFake
    implements _i3.AccountPublicInfo {
  _FakeAccountPublicInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationMessage_2 extends _i1.SmartFake
    implements _i4.NotificationMessage {
  _FakeNotificationMessage_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeProvider extends _i1.Mock implements _i5.HomeProvider {
  MockHomeProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.Repository);
  @override
  _i3.AccountPublicInfo get accountPublicInfo => (super.noSuchMethod(
        Invocation.getter(#accountPublicInfo),
        returnValue: _FakeAccountPublicInfo_1(
          this,
          Invocation.getter(#accountPublicInfo),
        ),
      ) as _i3.AccountPublicInfo);
  @override
  List<String> get tabs => (super.noSuchMethod(
        Invocation.getter(#tabs),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i4.NotificationMessage get notificationMessageObject => (super.noSuchMethod(
        Invocation.getter(#notificationMessageObject),
        returnValue: _FakeNotificationMessage_2(
          this,
          Invocation.getter(#notificationMessageObject),
        ),
      ) as _i4.NotificationMessage);
  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
      ) as int);
  @override
  int get newIndex => (super.noSuchMethod(
        Invocation.getter(#newIndex),
        returnValue: 0,
      ) as int);
  @override
  List<_i6.Balance> get balances => (super.noSuchMethod(
        Invocation.getter(#balances),
        returnValue: <_i6.Balance>[],
      ) as List<_i6.Balance>);
  @override
  List<_i7.Currency> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i7.Currency>[],
      ) as List<_i7.Currency>);
  @override
  List<_i8.TransactionHistory> get transactionHistoryList =>
      (super.noSuchMethod(
        Invocation.getter(#transactionHistoryList),
        returnValue: <_i8.TransactionHistory>[],
      ) as List<_i8.TransactionHistory>);
  @override
  set transactionHistoryList(List<_i8.TransactionHistory>? txList) =>
      super.noSuchMethod(
        Invocation.setter(
          #transactionHistoryList,
          txList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showBadge => (super.noSuchMethod(
        Invocation.getter(#showBadge),
        returnValue: false,
      ) as bool);
  @override
  set showBadge(bool? showBadge) => super.noSuchMethod(
        Invocation.setter(
          #showBadge,
          showBadge,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i9.Future<List<_i4.NotificationMessage>> callGetNotificationApi() =>
      (super.noSuchMethod(
        Invocation.method(
          #callGetNotificationApi,
          [],
        ),
        returnValue: _i9.Future<List<_i4.NotificationMessage>>.value(
            <_i4.NotificationMessage>[]),
      ) as _i9.Future<List<_i4.NotificationMessage>>);
  @override
  _i9.Future<void> shouldShowBadgeOrNot() => (super.noSuchMethod(
        Invocation.method(
          #shouldShowBadgeOrNot,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> getTransactionHistoryList() => (super.noSuchMethod(
        Invocation.method(
          #getTransactionHistoryList,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  List<_i8.TransactionHistory> getDenomSpecificTxList(
          {required String? defaultCurrency}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDenomSpecificTxList,
          [],
          {#defaultCurrency: defaultCurrency},
        ),
        returnValue: <_i8.TransactionHistory>[],
      ) as List<_i8.TransactionHistory>);
  @override
  void changeTabs(int? index) => super.noSuchMethod(
        Invocation.method(
          #changeTabs,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isBannerDark() => (super.noSuchMethod(
        Invocation.method(
          #isBannerDark,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  void setBalances(List<_i6.Balance>? balances) => super.noSuchMethod(
        Invocation.method(
          #setBalances,
          [balances],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void newOrder(int? index) => super.noSuchMethod(
        Invocation.method(
          #newOrder,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void mapBalanceToCurrencyCard() => super.noSuchMethod(
        Invocation.method(
          #mapBalanceToCurrencyCard,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<void> buildAssetsList() => (super.noSuchMethod(
        Invocation.method(
          #buildAssetsList,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void handleError(_i10.Either<_i11.Failure, dynamic>? either) =>
      super.noSuchMethod(
        Invocation.method(
          #handleError,
          [either],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void logAnalyticsEvent() => super.noSuchMethod(
        Invocation.method(
          #logAnalyticsEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Repository getRepository() => (super.noSuchMethod(
        Invocation.method(
          #getRepository,
          [],
        ),
        returnValue: _FakeRepository_0(
          this,
          Invocation.method(
            #getRepository,
            [],
          ),
        ),
      ) as _i2.Repository);
  @override
  void refreshScreen() => super.noSuchMethod(
        Invocation.method(
          #refreshScreen,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
